name: oci tenancy level policy build & deploymnet 

on:
  push:
    paths:
      - 'policies/OCI-Tenancy/**'
      - '!docs/**'
      - '!*.md'
  workflow_dispatch:

jobs:
  BuildPolicies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Build Tools
        run: |
          ls -lta
          pwd
          cat config
          sed -i "s/OCI_USER_ID/${{vars.OCI_USER_ID}}/g" "config"
          sed -i "s/OCI_FINGER_PRINT_ID/${{vars.OCI_FINGER_PRINT_ID}}/g" "config"
          sed -i "s/OCI_TENANCY_ID/${{vars.OCI_TENANCY_ID}}/g" "config"
          sed -i "s/OCI_REGION/${{vars.OCI_REGION}}/g" "config"
          cat config
          sudo apt update && sudo apt upgrade -y
          sudo apt install python3
          pip install oci-cli
          pip install oci
          wget https://releases.hashicorp.com/terraform/1.4.1/terraform_1.4.1_linux_amd64.zip
          sudo unzip terraform_1.4.1_linux_amd64.zip -d /usr/local/bin <<< "y"
          oci setup repair-file-permissions --file /home/runner/work/OCIPolicyMgmt/OCIPolicyMgmt/config
          oci setup repair-file-permissions --file /home/runner/work/OCIPolicyMgmt/OCIPolicyMgmt/oci_api_key.pem 
          python --version
          
      - name: Build & Validate
        run: |
          ls -lta
          python manage_policies.py tenancy tenancy tenancy-build-validation
          
  DeployTenancyLevelPolicies:
    name: Deploy Tenancy Policies
    needs: [BuildPolicies]
    runs-on: ubuntu-latest
    environment: 
      name: tenancy
    steps:
      - uses: actions/checkout@v2
      - name: Execute Policy Build Tool For Tenancy Level Policies
        run: |
          echo *************************************
          ls -lt
          cp ./terraform/env/env.tfvars.template.backup ./terraform/env/tenancy-generic-policies.tfvars
          cp ./terraform/env/env.tfvars.template.backup ./terraform/env/tenancy-network-policies.tfvars
          python manage_policies.py tenancy tenancy tenancy-deployment
    
      - name: Deploy Tenancy Level Generic Policies
        run: |
          echo *************************************
          cd terraform
          rm -rf .terraform
          echo *************************************
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export TF_VAR_fingerprint=${{ vars.OCI_FINGER_PRINT_ID }}
          export TF_VAR_private_key_path=${{ vars.OCI_PRIVATE_KEY_PATH }}
          export TF_VAR_user_ocid=${{ vars.OCI_USER_ID }}
          export TF_VAR_tenancy_ocid=${{ vars.OCI_TENANCY_ID }}
          export TF_VAR_compartment_ocid=${{ vars.OCI_COMPARTMENT_ID }}
          terraform init -backend-config=./env/tenancy-generic-policies-backend.conf
          echo ********************* Terraform Init Complete ****************
          terraform apply -var-file=./env/tenancy-generic-policies.tfvars -auto-approve
          echo ********************* Terraform Apply Complete ****************
        
      - name: Deploy Tenancy Level Network Policies
        run: |
          echo *************************************
          cd terraform
          rm -rf .terraform
          ls -lta
          echo *************************************
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export TF_VAR_fingerprint=${{ vars.OCI_FINGER_PRINT_ID }}
          export TF_VAR_private_key_path=${{ vars.OCI_PRIVATE_KEY_PATH }}
          export TF_VAR_user_ocid=${{ vars.OCI_USER_ID }}
          export TF_VAR_tenancy_ocid=${{ vars.OCI_TENANCY_ID }}
          export TF_VAR_compartment_ocid=${{ vars.OCI_COMPARTMENT_ID }}
          terraform init -backend-config=./env/tenancy-network-policies-backend.conf
          echo ********************* Terraform Init Complete ****************
          terraform apply -var-file=./env/tenancy-network-policies.tfvars -auto-approve
          echo ********************* Terraform Apply Complete ****************
